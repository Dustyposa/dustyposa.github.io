---
import { slugifyStr } from "@/utils/slugify";
import type { CollectionEntry } from "astro:content";
import { getPath } from "@/utils/getPath";
import Datetime from "./Datetime.astro";

export interface Props extends CollectionEntry<"blog"> {
  variant?: "h2" | "h3";
}

const { variant = "h2", data, id, filePath } = Astro.props;

const { title, description, pubDatetime, modDatetime, timezone } = data;

const headerProps = {
  style: { viewTransitionName: slugifyStr(title) },
  class: "text-lg font-medium decoration-dashed hover:underline",
};

// 通用的交互式内容检测
const isInteractiveContent = data.tags?.includes('交互式') || data.tags?.includes('interactive');
const htmlUrl = data.htmlUrl;
// 如果有htmlUrl就认为是HTML版本，或者同时有HTML标签和交互式标签
const isHtmlVersion = htmlUrl || isInteractiveContent;
---

<li class="my-6">
  <a
    href={getPath(id, filePath)}
    class="inline-block text-lg font-medium text-accent decoration-dashed underline-offset-4 focus-visible:no-underline focus-visible:underline-offset-0"
  >
    {
      variant === "h2" ? (
        <h2 {...headerProps}>{title}</h2>
      ) : (
        <h3 {...headerProps}>{title}</h3>
      )
    }
  </a>
  <Datetime {pubDatetime} {modDatetime} {timezone} />
  <p>{description}</p>
  
  {isInteractiveContent && (
      <div class="mt-4 flex flex-wrap gap-2">
        {(() => {
          if (isHtmlVersion && htmlUrl) {
            return (
              <a
                href={htmlUrl}
                target="_blank"
                class="inline-flex items-center gap-1 rounded-lg bg-accent px-3 py-1.5 text-sm font-medium text-accent-text-over transition-colors hover:bg-accent/80"
              >
                🚀 开始交互式学习
              </a>
            );
          }
        })()}
      </div>
    )}
</li>
