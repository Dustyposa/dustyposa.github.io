---
// src/components/Comments.astro
---

<div class="comments-wrapper">
  <section id="giscus-container">
    <h3>评论区</h3>
    <div id="giscus-comments">
      <!-- Giscus 脚本将通过下面的客户端脚本动态注入 -->
    </div>
  </section>
</div>

<script>
  // 此脚本会动态加载 Giscus
  const giscusContainer = document.querySelector("#giscus-comments");
  const GISCUS_THEME_LIGHT = "light_tritanopia";
  const GISCUS_THEME_DARK = "dark_tritanopia";

  function loadGiscus(theme: string) {
    if (!giscusContainer) return;

    // 防止重复加载相同主题
    const currentScript = giscusContainer.querySelector('script');
    if (currentScript && currentScript.getAttribute('data-theme') === (theme === 'dark' ? GISCUS_THEME_DARK : GISCUS_THEME_LIGHT)) return;

    // 清空前保存滚动位置（可选）
    const scrollTop = window.scrollY;

    giscusContainer.innerHTML = ''; // 加载前清空容器

    const script = document.createElement("script");
    script.src = "https://giscus.app/client.js";
    script.async = true;
    script.crossOrigin = "anonymous";

    // --- ⚠️ 重要：配置已根据您提供的信息更新 ---
    script.setAttribute("data-repo", "dustyposa/dustyposa.github.io");
    script.setAttribute("data-repo-id", "MDEwOlJlcG9zaXRvcnkyNTMzNzY4OTE=");
    script.setAttribute("data-category", "Comments");
    script.setAttribute("data-category-id", "DIC_kwDODxo5e84Csrik");
    // --- Giscus 配置结束 ---

    script.setAttribute("data-mapping", "pathname");
    script.setAttribute("data-strict", "0");
    script.setAttribute("data-reactions-enabled", "1");
    script.setAttribute("data-emit-metadata", "0");
    script.setAttribute("data-input-position", "bottom");
    script.setAttribute("data-lang", "zh-CN");
    script.setAttribute("data-theme", theme === 'dark' ? GISCUS_THEME_DARK : GISCUS_THEME_LIGHT); // 使用变量

    giscusContainer.appendChild(script);

    // 恢复滚动位置（可选）
    window.scrollTo(0, scrollTop);
  }

  // 获取当前主题
  function getCurrentTheme() {
    return document.documentElement.getAttribute('data-theme') || 'light';
  }

  // 首次加载页面时，加载 Giscus
  const initialTheme = getCurrentTheme();
  loadGiscus(initialTheme);

  // 当 Astro 的视图过渡（View Transitions）切换页面后，重新加载 Giscus
  document.addEventListener("astro:after-swap", () => {
    const currentTheme = getCurrentTheme();
    loadGiscus(currentTheme);
  });

  // 监听主题变化
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'attributes' && mutation.attributeName === 'data-theme') {
        const newTheme = getCurrentTheme();
        loadGiscus(newTheme); // 重新加载
      }
    });
  });

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['data-theme']
  });
</script>
